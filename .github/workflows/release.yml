name: Release

on:
  push:
    tags:
      - "v*.*.*" # dÃ©clenche sur un tag de version

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_HOME: /tmp/gpg-home
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Set provider name
        run: |
          PROVIDER_NAME=${GITHUB_REPOSITORY##*/}  # extrait juste le nom du repo
          echo "PROVIDER_NAME=$PROVIDER_NAME" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          mkdir -p dist
          for os in linux darwin windows; do
            for arch in amd64 arm64; do
              echo "Building for $os/$arch"
              GOOS=$os GOARCH=$arch go build -o dist/${PROVIDER_NAME}_${os}_${arch}
              zip dist/${PROVIDER_NAME}_${os}_${arch}.zip dist/${PROVIDER_NAME}_${os}_${arch}*
              rm dist/${PROVIDER_NAME}_${os}_${arch}
            done
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum *.zip > SHA256SUMS
          sha256sum SHA256SUMS >> SHA256SUMS

      - name: Setup GPG directory
        run: |
          mkdir -p "$GPG_HOME"
          chmod 700 "$GPG_HOME"

      - name: Import GPG key
        run: |
          export GNUPGHOME="$GPG_HOME"
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --list-secret-keys

      - name: Sign artifacts
        run: |
          export GNUPGHOME="$GPG_HOME"
          cd dist
          for file in *.zip SHA256SUMS; do
            gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" --detach-sign --armor "$file"
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}